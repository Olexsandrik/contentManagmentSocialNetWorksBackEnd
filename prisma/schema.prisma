generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String?   @unique
  name        String?
  password    String?
  provider    String?
  accountId   String?
  avatarUrl   String?   @db.Text
  createdAt   DateTime  @default(now())
  ToDo        ToDo[]
  info        Info?
  infoData    InfoDataSocial[]  
}
model InfoDataSocial {
  id                Int      @id @default(autoincrement())
  userId            Int
  user              User     @relation(fields: [userId], references: [id])
  provider          String
  followersCount    Int
  mediaCount        Int
  likesCount        Int
  engagementRate    Float?
  profileUsername   String
  profilePictureUrl String
  createdAt         DateTime @default(now())
}




model ToDo {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  date       DateTime
  content    String
  completed  Boolean  @default(false)
  createdAt  DateTime @default(now())
  chatGpt    ChatGPT? @relation(fields: [chatGptId], references: [id])
  chatGptId  Int?
}

model ChatGPT {
  id      Int     @id @default(autoincrement())
  content String
  todos   ToDo[]
}



model Info {
  id              Int      @id @default(autoincrement())
  user            User     @relation(fields: [userId], references: [id])
  userId          Int      @unique
  platform        String
  username        String
  followers       Int
  following       Int
  bio             String?
  profilePicture  String?
  mediaCount      Int
}
